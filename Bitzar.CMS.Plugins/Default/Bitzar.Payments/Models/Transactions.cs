using System.Collections.Generic;
namespace Bitzar.Payments.Models
{
    public class Person
    {
        public string payerId { get; set; }
        public string firstName { get; set; }
        public string lastName { get; set; }
        public string cpf { get; set; }
        public string email { get; set; }
    };

    public class PersonSeller
    {
        public string firstName { get; set; }
        public string lastName { get; set; }
        public string cpf { get; set; }
        public string email { get; set; }
        public string birthdate { get; set; }
        public string phone_number { get; set; }
        public string statement_descriptor { get; set; }
        public string mcc { get; set; }
    };

    public class Split
    {
        public string recipient { get; set; }
        public int? amount { get; set; }
        public bool liable { get; set; } = true;
        public bool charge_processing_fee { get; set; }
        public bool charge_recipient_processing_fee { get; set; }
        public int? percentage { get; set; }
    };

    public class BillingAdress
    {
        public string place { get; set; }
        public string complement { get; set; }
        public string neighborhood { get; set; }
        public string city { get; set; }
        public string state { get; set; }
        public int postalCode { get; set; }
    };

    public class Transaction
    {
        const int MAX_REFERENCE_LENGTH = 16;
        const int MAX_DESCRIPTOR_LENGTH = 13;

        public enum PaymentGateway
        {
            All = 0,
            Zoop = 1,
            Platform = 2,
            Braspag = 3
        }

        public enum OperationType
        {
            Credit,
            CreditWithToken,
            Debit,
            Boleto,
            PlatformCredit,
            Pix
        }
        public List<Split> Splits { get; set; }

        /// <summary>
        /// Value to be charged
        /// </summary>
        public int Amount { get; set; }

        private string reference;
        /// <summary>
        /// Number of Order generated by enterprise (Cart). Max Length: 16
        /// </summary>
        public string Reference
        {
            get => this.reference;
            set
            {
                if (value.Length > MAX_REFERENCE_LENGTH)
                    this.reference = value.Substring(0, MAX_REFERENCE_LENGTH);

                this.reference = value;
            }
        }
        /// <summary>
        /// Number of installments to be charged
        /// </summary>
        public int Installments { get; set; }

        private string softDescriptor;
        /// <summary>
        /// Description to show on customer bill. Max Length: 13
        /// </summary>
        public string SoftDescriptor
        {
            get => this.softDescriptor;
            set
            {
                if (value.Length > MAX_DESCRIPTOR_LENGTH)
                    this.softDescriptor = value.Substring(0, MAX_DESCRIPTOR_LENGTH);

                this.softDescriptor = value;
            }
        }

        public PaymentGateway Origin { get; set; } = PaymentGateway.Zoop;

        public OperationType Kind { get; set; } = OperationType.Credit;
    }

    public class CreditCard
    {
        public string CardNumber { get; set; }
        public string SecurityCode { get; set; }
        public string CardHolderName { get; set; }
        public string ExpirationMonth { get; set; }
        public string ExpirationYear { get; set; }
        public string CardToken { get; set; }

        public CreditCard Mask()
        {
            return new CreditCard
            {
                CardHolderName = this.CardHolderName,
                CardNumber = $"XXXX-XXXX-XXXX-{this.CardNumber.Substring(this.CardNumber.Length - 4, 4)}",
                ExpirationMonth = this.ExpirationMonth,
                ExpirationYear = this.ExpirationYear,
                SecurityCode = "XXX"
            };
        }
    }

    public class Callback
    {
        public string platform { get; set; }
        public string evento { get; set; }
        public string eventId { get; set; }
        public string referenceId { get; set; }
    }
}