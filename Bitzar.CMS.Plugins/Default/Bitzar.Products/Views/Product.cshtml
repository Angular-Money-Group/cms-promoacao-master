@inherits System.Web.Mvc.WebViewPage
@using Bitzar.CMS.Core.Functions;

@{
    var PLUGIN_NAME = "Bitzar.Products.dll";
    var NameProduct = CMS.Configuration.Get("NameProduct", PLUGIN_NAME);
    ViewBag.Title = "Cadastro de "+NameProduct;

    var Plugin = CMS.Plugins.Get(PLUGIN_NAME).Plugin;

    var Parameters = (Dictionary<string, string>)ViewBag.Parameters;
    var lang = Parameters.ContainsKey("Lang") ? Convert.ToInt32(Parameters["Lang"]) : CMS.I18N.DefaultLanguage.Id;

    if (Parameters == null || Parameters.Count == 0 || !Parameters.ContainsKey("Lang"))
    {
        Parameters.Add("Lang", lang.ToString());
    }



    var Model = Plugin?.Execute("ListProduct", null, Parameters, null);
    var Culture = CMS.I18N.AvailableLanguages.FirstOrDefault(f => f.Id == lang);
}

@section PageHeaderActions {
    <div class="page-header-actions">
        <div class="btn-group" data-toggle="buttons">
            @foreach (var language in CMS.I18N.AvailableLanguages)
            {
                <label class="btn btn-primary btn-outline @(lang == language.Id ? "active" : "")">
                    <input type="radio" name="options" id="option1" autocomplete="off"
                           onchange="window.location.href='@Url.Action("Action", "Plugin", new { area = "admin", source = PLUGIN_NAME, function = "Product", Lang = language.Id })';"
                           @(lang == language.Id ? "checked" : "")> @language.Culture
                    </label>
                }
        </div>
    </div>
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
<style>
    .sortable tr {
        cursor: grab;
    }
</style>

<div class="panel panel-bordered">
    <header class="panel-heading">
        <h3 class="panel-title">
            @NameProduct
        </h3>
    </header>

    <table class="table table-hover table-strip">
        <thead>
            <tr>
                <th>SKU</th>
                <th>Descrição</th>
                <th>Url</th>
                <th class="column-action">Oculto?</th>
                <th class="column-action">Inativo?</th>
                <th class="column-action"></th>
            </tr>
        </thead>
        <tbody id="products" class="sortable">
            @if (Model == null || Model.Count == 0)
            {
                <tr>
                    <td class="text-center" colspan="5">
                        Não há produtos cadastrados
                    </td>
                </tr>
            }
            else
            {
                foreach (var entity in Model)
                {
                <tr data-id="@entity.Id">
                    <td>@entity.SKU</td>
                    <td>@entity.Description</td>
                    <td><a href="/@entity.RouteUrl" target="_blank">/@entity.Url</a></td>
                    <td class="text-center"><i class="icon wb-@(entity.Hide ? "check" : "close")"></i></td>
                    <td class="text-center"><i class="icon wb-@(entity.Disabled ? "check" : "close")"></i></td>
                    <td>
                        <a href="@Url.Action("Action", "Plugin", new { area = "admin", source = PLUGIN_NAME, function = "ProductEdit", Lang = lang, Id = entity.Id, IdType = entity.IdType })">
                            <i class="icon wb-edit"></i>
                        </a>
                    </td>
                </tr>
                }
            }
        </tbody>
    </table>

    <div class="panel-footer">
        <a class="btn btn-primary" href="@Url.Action("Action", "Plugin", new { area = "admin", source = PLUGIN_NAME, function = "ProductEdit", Lang = lang, IdType = 1 })"
           data-hotkey="ctrl+i" data-toggle="tooltip" data-title="Ctrl+I" data-placement="top" data-container="body">
            <i class="icon fa-plus"></i> Novo
        </a>
       
    </div>

</div>


<script>
    // Helper to keep the width of the table row
    var fixHelper = function (e, ui) {
        ui.children().each(function () {
            $(this).width($(this).width());
        });
        return ui;
    };

    // Ajax call to update the order in the database and persist status
    sortProducts = function (e, ui) {
        // Get all the objects in the current order list
        var order = [];
        $("#products tr[data-id]").each(function () { order.push($(this).data('id')); });

        // Make the call
        var url = "@(CMS.Functions.ExecuteUrl)";
        var data = {
            "source": "@PLUGIN_NAME",
            "function": "SortProducts",
            "output": "JSON",
            "Sort": order.toString()
        }
        $.post(url, data, function (response) {
            if (response.hasOwnProperty('error'))
                swal('Ops!!!', response.error, 'error');
        });
    }
    
    // Activate the rows sorter
    $("#products").sortable({ helper: fixHelper, stop: sortProducts }).disableSelection();
</script>